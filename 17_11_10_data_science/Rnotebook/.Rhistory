y = "edu",
color = "party_ger",
point = F,
remove = NA
)
ess_ger %>%
filter(!is.na(party_ger)) %>%
ggscatter(
x = "left_right",
y = "edu",
color = "party_ger",
point = F,
remove = NA
) +
geom_jitter(aes(colour = party_ger), alpha = 0.3)
ess_ger %>%
filter(!is.na(party_ger)) %>%
ggscatter(
x = "left_right",
y = "edu",
color = "party_ger",
point = F,
remove = NA
) +
geom_jitter(aes(colour = party_ger), alpha = 0.3) +
facet_wrap(~party_ger)
ess_ger %>%
filter(!is.na(party_ger)) %>%
ggscatter(
x = "edu",
y = "left_right",
color = "party_ger",
point = F,
remove = NA
) +
geom_jitter(aes(colour = party_ger), alpha = 0.3) +
facet_wrap(~party_ger)
ess_ger %>%
filter(!is.na(party_ger)) %>%
ggscatter(
x = "edu",
y = "left_right",
color = "party_ger",
point = F,
remove = NA
)
ess_ger %>%
filter(!is.na(party_ger)) %>%
ggscatter(
x = "edu",
y = "left_right",
color = "party_ger",
point = T,
remove = NA
)
plot_function <- function(x, y){
# Der Datensatz
ess_ger %>%
filter(!is.na(party_ger)) %>%
# Die Grafik
ggscatter(
x = x,
y = y,
color = "party_ger",
point = F,
remove = NA
) +
facet_wrap(~party_ger)+
geom_jitter(aes(colour = party_ger), alpha = 0.3) +
stat_cor(aes(color = party_ger), method = "pearson", label.x = 3, label.y = 11) +
theme(legend.position = "none")+
scale_colour_manual(values = party_colors)
}
plot_function("left_right", "edu")
# Der Datensatz
ess_ger %>%
filter(!is.na(party_ger)) %>%
# Die Grafik
ggscatter(
x = x,
y = y,
color = "party_ger",
point = F,
remove = NA
) +
facet_wrap(~party_ger)+
geom_smooth(aes(colour = party_ger))+
geom_jitter(aes(colour = party_ger), alpha = 0.3) +
stat_cor(aes(color = party_ger), method = "pearson", label.x = 3, label.y = 11) +
theme(legend.position = "none")+
scale_colour_manual(values = party_colors)
plot_function <- function(x, y){
# Der Datensatz
ess_ger %>%
filter(!is.na(party_ger)) %>%
# Die Grafik
ggscatter(
x = x,
y = y,
color = "party_ger",
point = F,
remove = NA
) +
facet_wrap(~party_ger)+
geom_smooth(aes(colour = party_ger))+
geom_jitter(aes(colour = party_ger), alpha = 0.3) +
stat_cor(aes(color = party_ger), method = "pearson", label.x = 3, label.y = 11) +
theme(legend.position = "none")+
scale_colour_manual(values = party_colors)
}
plot_function("left_right", "edu")
plot_function("left_right", "income")
plot_function("left_right", "safety") + ylim(0,5)
plot_function("left_right", "gay_tolerance") + ylim(0,5)
plot_function("left_right", "imm_poor") + ylim(0,5)
plot_function("left_right", "imm_econ") + ylim(0,5)
plot_function("left_right", "religious")
plot_function("left_right", "fake_refugee") + ylim(0,5)
plot_function("left_right", "edu")
plot_function("left_right", "income")
plot_function("left_right", "safety") + ylim(0,5)
plot_function("left_right", "gay_tolerance") + ylim(0,5)
plot_function("left_right", "imm_poor") + ylim(0,5)
# Der Datensatz
ess_ger %>%
filter(!is.na(party_ger)) %>%
# Die Grafik
ggscatter(
x = x,
y = y,
color = "party_ger",
point = F,
remove = NA
) +
facet_wrap(~party_ger)+
geom_smooth(aes(colour = party_ger), method = "lm")+
geom_jitter(aes(colour = party_ger), alpha = 0.3) +
stat_cor(aes(color = party_ger), method = "pearson", label.x = 3, label.y = 11) +
theme(legend.position = "none")+
scale_colour_manual(values = party_colors)
plot_function <- function(x, y){
# Der Datensatz
ess_ger %>%
filter(!is.na(party_ger)) %>%
# Die Grafik
ggscatter(
x = x,
y = y,
color = "party_ger",
point = F,
remove = NA
) +
facet_wrap(~party_ger)+
geom_smooth(aes(colour = party_ger), method = "lm")+
geom_jitter(aes(colour = party_ger), alpha = 0.3) +
stat_cor(aes(color = party_ger), method = "pearson", label.x = 3, label.y = 11) +
theme(legend.position = "none")+
scale_colour_manual(values = party_colors)
}
plot_function("left_right", "edu")
plot_function("left_right", "income")
plot_function("left_right", "safety") + ylim(0,5)
plot_function("left_right", "gay_tolerance") + ylim(0,5)
plot_function("left_right", "imm_poor") + ylim(0,5)
ess_ger %>%
filter(!is.na(party_ger)) %>%
ggscatter(
x = "edu",
y = "left_right",
color = "party_ger",
point = F,
add = "jitter",
remove = NA
) +
geom_jitter(aes(colour = party_ger), alpha = 0.3) +
facet_wrap(~party_ger)
ess_ger %>%
filter(!is.na(party_ger)) %>%
ggscatter(
x = "edu",
y = "left_right",
color = "party_ger",
point = F,
add = "jitter",
remove = NA
)
ess %>%
mutate(party_ger = factor(party_ger, levels = c("Union", "Grüne", "SPD","FDP", "AfD", "Linke"))) %>%
ggviolin(
x = "party_ger",
y = "religious",
color = "party_ger",
title = "Religiösität anch Parteizugehörigkeit",
xlab = "",
ylab = "Religiösität",
remove = NA,
add = "jitter"
) +
scale_colour_manual(values = party_colors) +
theme(legend.position = "none")
library(ggpubr)
gg1 <- ess %>%
ggboxplot(
x = "party_ger",
y = "left_right",
color = "party_ger",
title = "Parteizugehörigkeit nach Links-Rechtsskala (Selbsteinschätzung)",
xlab = "",
ylab = "Links-Rechtsskala",
remove = NA
)
gg1
ess %>%
group_by(country, pc) %>%
summerize(mean_imm_econ = mean(imm_econ, na.rm = T))
ess %>%
group_by(country, pc) %>%
summarise(mean_imm_econ = mean(imm_econ, na.rm = T))
ess %>%
group_by(country, pc) %>%
summarise(mean_imm_econ = mean(imm_econ, na.rm = T)) %>%
ggdotchart(dfm,
x = "country",
y = "mean_imm_econ",
color = "pc",                                # Color by groups
#palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
# add = "segments",                             # Add segments from y = 0 to dots
# add.params = list(color = "lightgray", size = 2), # Change segment color and size
group = "pc",                                # Order by groups
dot.size = 6                               # Large dot size
#label = round(dfm$mpg_z,1),                        # Add mpg values as dot labels
#font.label = list(color = "white", size = 9,
#                   vjust = 0.5),               # Adjust label parameters
# ggtheme = theme_pubr()                        # ggplot2 theme
)+
geom_hline(yintercept = 0, linetype = 2, color = "lightgray")
ess %>%
group_by(country, pc) %>%
summarise(mean_imm_econ = mean(imm_econ, na.rm = T)) %>%
ggdotchart(
x = "country",
y = "mean_imm_econ",
color = "pc",                                # Color by groups
#palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
# add = "segments",                             # Add segments from y = 0 to dots
# add.params = list(color = "lightgray", size = 2), # Change segment color and size
group = "pc",                                # Order by groups
dot.size = 6                               # Large dot size
#label = round(dfm$mpg_z,1),                        # Add mpg values as dot labels
#font.label = list(color = "white", size = 9,
#                   vjust = 0.5),               # Adjust label parameters
# ggtheme = theme_pubr()                        # ggplot2 theme
)+
geom_hline(yintercept = 0, linetype = 2, color = "lightgray")
ess %>%
group_by(country, pc) %>%
summarise(mean_imm_econ = mean(imm_econ, na.rm = T)) %>%
ggdotchart(
x = "country",
y = "mean_imm_econ",
color = "pc",                                # Color by groups
#palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
# add = "segments",                             # Add segments from y = 0 to dots
# add.params = list(color = "lightgray", size = 2), # Change segment color and size
group = "pc",                                # Order by groups
dot.size = 6,                              # Large dot size
label = round(dfm$mean_imm_econ,1)                        # Add mpg values as dot labels
#font.label = list(color = "white", size = 9,
#                   vjust = 0.5),               # Adjust label parameters
# ggtheme = theme_pubr()                        # ggplot2 theme
)+
geom_hline(yintercept = 0, linetype = 2, color = "lightgray")
ess %>%
group_by(country, pc) %>%
summarise(mean_imm_econ = mean(imm_econ, na.rm = T)) %>%
ggdotchart(
x = "country",
y = "mean_imm_econ",
color = "pc",                                # Color by groups
#palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
# add = "segments",                             # Add segments from y = 0 to dots
# add.params = list(color = "lightgray", size = 2), # Change segment color and size
group = "pc",                                # Order by groups
dot.size = 6,                              # Large dot size
label = "mean_imm_econ",                        # Add mpg values as dot labels
#font.label = list(color = "white", size = 9,
#                   vjust = 0.5),               # Adjust label parameters
# ggtheme = theme_pubr()                        # ggplot2 theme
)+
geom_hline(yintercept = 0, linetype = 2, color = "lightgray")
ess %>%
group_by(country, pc) %>%
summarise(mean_imm_econ = round(mean(imm_econ, na.rm = T),1)) %>%
ggdotchart(
x = "country",
y = "mean_imm_econ",
color = "pc",                                # Color by groups
#palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
# add = "segments",                             # Add segments from y = 0 to dots
# add.params = list(color = "lightgray", size = 2), # Change segment color and size
group = "pc",                                # Order by groups
dot.size = 6,                              # Large dot size
label = "mean_imm_econ"                        # Add mpg values as dot labels
#font.label = list(color = "white", size = 9,
#                   vjust = 0.5),               # Adjust label parameters
# ggtheme = theme_pubr()                        # ggplot2 theme
)+
geom_hline(yintercept = 0, linetype = 2, color = "lightgray")
ess %>%
group_by(country, pc) %>%
summarise(mean_imm_econ = round(mean(imm_econ, na.rm = T),1)) %>%
ggdotchart(
x = "country",
y = "mean_imm_econ",
color = "pc",                                # Color by groups
#palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
# add = "segments",                             # Add segments from y = 0 to dots
# add.params = list(color = "lightgray", size = 2), # Change segment color and size
group = "pc",                                # Order by groups
dot.size = 6,                              # Large dot size
label = "mean_imm_econ",                        # Add mpg values as dot labels
font.label = list(color = "white", size = 9,
vjust = 0.5)               # Adjust label parameters
# ggtheme = theme_pubr()                        # ggplot2 theme
)+
geom_hline(yintercept = 0, linetype = 2, color = "lightgray")
ess %>%
group_by(country, pc) %>%
summarise(mean_imm_econ = round(mean(imm_econ, na.rm = T),1)) %>%
ggdotchart(
x = "country",
y = "mean_imm_econ",
color = "pc",                                # Color by groups
#palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
add = "segments",                             # Add segments from y = 0 to dots
# add.params = list(color = "lightgray", size = 2), # Change segment color and size
group = "pc",                                # Order by groups
dot.size = 6,                              # Large dot size
label = "mean_imm_econ",                        # Add mpg values as dot labels
font.label = list(color = "white", size = 9,
vjust = 0.5)               # Adjust label parameters
# ggtheme = theme_pubr()                        # ggplot2 theme
)+
geom_hline(yintercept = 0, linetype = 2, color = "lightgray")
ess %>%
group_by(country, pc) %>%
summarise(mean_imm_econ = round(mean(imm_econ, na.rm = T),1)) %>%
ggdotchart(
x = "country",
y = "mean_imm_econ",
color = "pc",                                # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
add = "segments",                             # Add segments from y = 0 to dots
group = "pc",                                # Order by groups
dot.size = 6,
rotate = T,                            # Large dot size
label = "mean_imm_econ",                        # Add mpg values as dot labels
font.label = list(color = "white",
size = 9, vjust = 0.5)               # Adjust label parameters
)
ess_ger %>%
filter(!is.na(party_ger)) %>%
ggscatter(
x = "edu",
y = "left_right",
color = "party_ger",
point = F,
add = "jitter",
remove = NA
) +
geom_jitter(aes(colour = party_ger), alpha = 0.3) +
facet_wrap(~party_ger)
ess_ger %>%
filter(!is.na(party_ger)) %>%
ggscatter(
x = "edu",
y = "left_right",
color = "party_ger",
point = F,
remove = NA
) +
geom_jitter(aes(colour = party_ger), alpha = 0.3) +
facet_wrap(~party_ger)
ess %>%
mutate(party_ger = factor(party_ger, levels = c("Union", "Grüne", "SPD","FDP", "AfD", "Linke"))) %>%
ggviolin(
x = "party_ger",
y = "religious",
color = "party_ger",
palette = party_colors,
title = "Religiösität anch Parteizugehörigkeit",
xlab = "",
ylab = "Religiösität",
remove = NA,
add = "jitter"
) +
#scale_colour_manual(values = party_colors) +
theme(legend.position = "none")
ess %>%
mutate(party_ger = factor(party_ger, levels = c("Union", "Grüne", "SPD","FDP", "AfD", "Linke"))) %>%
ggviolin(
x = "party_ger",
y = "religious",
color = "party_ger",
palette = party_colors,
title = "Religiösität anch Parteizugehörigkeit",
xlab = "",
ylab = "Religiösität",
remove = NA,
add = "jitter",facet.by = "gender"
) +
theme(legend.position = "none")
ess %>%
mutate(party_ger = factor(party_ger, levels = c("Union", "Grüne", "SPD","FDP", "AfD", "Linke"))) %>%
ggviolin(
x = "party_ger",
y = "religious",
color = "party_ger",
palette = party_colors,
title = "Religiösität anch Parteizugehörigkeit",
xlab = "",
ylab = "Religiösität",
remove = NA,
add = "jitter"
#facet.by = "gender"
) +
theme(legend.position = "none")
plot_function <- function(x, y){
# Der Datensatz
ess_ger %>%
filter(!is.na(party_ger)) %>%
# Die Grafik
ggscatter(
x = x,
y = y,
color = "party_ger",
palette = party_colors,
point = F,
remove = NA
) +
facet_wrap(~party_ger)+
geom_smooth(aes(colour = party_ger), method = "lm")+
geom_jitter(aes(colour = party_ger), alpha = 0.3) +
stat_cor(aes(color = party_ger), method = "pearson", label.x = 3, label.y = 11) +
theme(legend.position = "none")
}
plot_function("left_right", "edu")
plot_function("left_right", "income")
plot_function("left_right", "safety") + ylim(0,5)
plot_function("left_right", "gay_tolerance") + ylim(0,5)
plot_function("left_right", "imm_poor") + ylim(0,5)
plot_function("left_right", "imm_econ") + ylim(0,5)
plot_function("left_right", "religious")
plot_function("left_right", "fake_refugee") + ylim(0,5)
plotly::ggplotly(gg1)
gg1 <- ess %>%
ggboxplot(
x = "party_ger",
y = "left_right",
color = "party_ger",
palette = party_colors,
title = "Parteizugehörigkeit nach Links-Rechtsskala (Selbsteinschätzung)",
xlab = "",
ylab = "Links-Rechtsskala",
remove = NA,
add = "jitter"
) +
theme(legend.position = "none") +
coord_flip()
gg1
plotly::ggplotly(gg1)
gg1 <- ess %>%
ggboxplot(
x = "party_ger",
y = "left_right",
color = "party_ger",
palette = party_colors,
title = "Parteizugehörigkeit nach Links-Rechtsskala (Selbsteinschätzung)",
xlab = "",
ylab = "Links-Rechtsskala",
remove = NA
#add = "jitter"
) +
theme(legend.position = "none") +
coord_flip()
gg1
plotly::ggplotly(gg1)
gg1 <- ess %>%
ggboxplot(
x = "party_ger",
y = "left_right",
color = "party_ger",
palette = party_colors,
title = "Parteizugehörigkeit nach Links-Rechtsskala (Selbsteinschätzung)",
xlab = "",
ylab = "Links-Rechtsskala",
remove = NA
#add = "jitter"
) +
coord_flip()
gg1
plotly::ggplotly(gg1)
plotly::ggplotly(gg1, width = 500)
plotly::ggplotly(gg1, width = 700, hight = 400)
