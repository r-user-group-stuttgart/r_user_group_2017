geom_hline(aes(yintercept = mw, colour = gender), sum_dat) +
geom_vline(aes(xintercept = mh, colour = gender), sum_dat) +
viridis::scale_color_viridis(discrete = T)
grid.arrange(gg_den1, blankPlot, gg_main, gg_den2,
ncol=2, nrow=2, widths=c(4, 1.4), heights=c(1.4, 4))
gg_main <- ggplot(d_s, aes(x = height, y = weight, colour = gender)) +
geom_point(alpha = .5) +
theme_bw() +
theme(legend.position = "bottom") +
geom_hline(aes(yintercept = mw, colour = gender), sum_dat) +
geom_vline(aes(xintercept = mh, colour = gender), sum_dat) +
viridis::scale_color_viridis(discrete = T)
gg_den1 <- ggplot(d_s, aes(height, fill = factor(gender))) +
geom_density(position = position_dodge(), alpha = .5) +
theme_bw() + theme(legend.position = "none") +
viridis::scale_fill_viridis(discrete = T, "") +
viridis::scale_color_viridis(discrete = T, "") +
geom_vline(aes(xintercept = mh, colour = gender), sum_dat)
gg_den2 <- ggplot(d_s, aes(weight, fill = factor(gender))) +
geom_density(position = position_dodge(), alpha = .5) +
theme_bw() + theme(legend.position = "none") +
viridis::scale_fill_viridis(discrete = T, "") +
viridis::scale_color_viridis(discrete = T, "") +
geom_vline(aes(xintercept = mw, colour = gender), sum_dat)
blankPlot <- ggplot()+geom_blank(aes(1,1))+
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
)
library(gridExtra)
grid.arrange(gg_den1, blankPlot, gg_main, gg_den2,
ncol=2, nrow=2, widths=c(4, 1.4), heights=c(1.4, 4))
gg_den2 <- ggplot(d_s, aes(weight, fill = factor(gender))) +
geom_density(position = position_dodge(), alpha = .5) +
theme_bw() + theme(legend.position = "none") +
viridis::scale_fill_viridis(discrete = T, "") +
viridis::scale_color_viridis(discrete = T, "") +
geom_vline(aes(xintercept = mw, colour = gender), sum_dat) +
coord_flip()
gg_den2
grid.arrange(gg_den1, blankPlot, gg_main, gg_den2,
ncol=2, nrow=2, widths=c(4, 1.4), heights=c(1.4, 4))
gg_main <- ggplot(d_s, aes(x = height, y = weight, colour = gender)) +
geom_point(alpha = .5) +
theme_bw() +
theme(legend.position = "none") +
geom_hline(aes(yintercept = mw, colour = gender), sum_dat) +
geom_vline(aes(xintercept = mh, colour = gender), sum_dat) +
viridis::scale_color_viridis(discrete = T)
grid.arrange(gg_den1, blankPlot, gg_main, gg_den2,
ncol=2, nrow=2, widths=c(4, 1.4), heights=c(1.4, 4))
gg_main <- ggplot(d_s, aes(x = height, y = weight, colour = gender)) +
geom_point(alpha = .5) +
theme_bw() +
theme(legend.position = "none") +
geom_hline(aes(yintercept = mw, colour = gender), sum_dat) +
geom_vline(aes(xintercept = mh, colour = gender), sum_dat) +
scale_color_gdocs()
gg_den1 <- ggplot(d_s, aes(height, fill = factor(gender))) +
geom_density(position = position_dodge(), alpha = .5) +
theme_bw() + theme(legend.position = "none") +
scale_color_gdocs() +
scale_fill_gdocs() +
geom_vline(aes(xintercept = mh, colour = gender), sum_dat)
gg_main <- ggplot(d_s, aes(x = height, y = weight, colour = gender)) +
geom_point(alpha = .5) +
theme_bw() +
theme(legend.position = "none") +
geom_hline(aes(yintercept = mw, colour = gender), sum_dat) +
geom_vline(aes(xintercept = mh, colour = gender), sum_dat) +
scale_color_gdocs()
gg_den1 <- ggplot(d_s, aes(height, fill = factor(gender))) +
geom_density(position = position_dodge(), alpha = .5) +
theme_bw() + theme(legend.position = "none") +
scale_color_gdocs() +
scale_fill_gdocs() +
geom_vline(aes(xintercept = mh, colour = gender), sum_dat)
gg_den2 <- ggplot(d_s, aes(weight, fill = factor(gender))) +
geom_density(position = position_dodge(), alpha = .5) +
theme_bw() + theme(legend.position = "none") +
scale_color_gdocs() +
scale_fill_gdocs() +
geom_vline(aes(xintercept = mw, colour = gender), sum_dat) +
coord_flip()
blankPlot <- ggplot()+geom_blank(aes(1,1))+
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
)
library(gridExtra)
grid.arrange(gg_den1, blankPlot, gg_main, gg_den2,
ncol=2, nrow=2, widths=c(4, 1.4), heights=c(1.4, 4))
gg_main <- ggplot(d_s, aes(x = height, y = weight, colour = gender)) +
geom_point(alpha = .5) +
theme_bw() +
theme(legend.position = "none") +
geom_hline(aes(yintercept = mw, colour = gender), sum_dat) +
geom_vline(aes(xintercept = mh, colour = gender), sum_dat) +
scale_color_gdocs()
gg_den1 <- ggplot(d_s, aes(height, fill = factor(gender))) +
geom_density(position = position_dodge(), alpha = .5) +
theme_bw() + theme(legend.position = "none") +
scale_color_gdocs() +
scale_fill_gdocs() +
ylab("") +
geom_vline(aes(xintercept = mh, colour = gender), sum_dat)
gg_den2 <- ggplot(d_s, aes(weight, fill = factor(gender))) +
geom_density(position = position_dodge(), alpha = .5) +
theme_bw() + theme(legend.position = "none") +
scale_color_gdocs() +
scale_fill_gdocs() +
geom_vline(aes(xintercept = mw, colour = gender), sum_dat) +
coord_flip() +
xlab("") +
blankPlot <- ggplot()+geom_blank(aes(1,1))+
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
)
gg_den2 <- ggplot(d_s, aes(weight, fill = factor(gender))) +
geom_density(position = position_dodge(), alpha = .5) +
theme_bw() + theme(legend.position = "none") +
scale_color_gdocs() +
scale_fill_gdocs() +
geom_vline(aes(xintercept = mw, colour = gender), sum_dat) +
coord_flip() +
xlab("")
grid.arrange(gg_den1, blankPlot, gg_main, gg_den2,
ncol=2, nrow=2, widths=c(4, 1.4), heights=c(1.4, 4))
gg_den1 <- ggplot(d_s, aes(height, fill = factor(gender))) +
geom_density(position = position_dodge(), alpha = .5) +
theme_bw() + theme(legend.position = "none") +
scale_color_gdocs() +
scale_fill_gdocs() +
xlab("") +
geom_vline(aes(xintercept = mh, colour = gender), sum_dat)
grid.arrange(gg_den1, blankPlot, gg_main, gg_den2,
ncol=2, nrow=2, widths=c(4, 1.4), heights=c(1.4, 4))
gg_main <- ggplot(d_s, aes(x = height, y = weight, colour = gender)) +
geom_point(alpha = .5) +
geom_smooth(method = "lm")
gg_main <- ggplot(d_s, aes(x = height, y = weight, colour = gender)) +
geom_point(alpha = .5) +
geom_smooth(method = "lm") +
theme_bw() +
theme(legend.position = "none") +
geom_hline(aes(yintercept = mw, colour = gender), sum_dat) +
geom_vline(aes(xintercept = mh, colour = gender), sum_dat) +
scale_color_gdocs()
grid.arrange(gg_den1, blankPlot, gg_main, gg_den2,
ncol=2, nrow=2, widths=c(4, 1.4), heights=c(1.4, 4))
gg_main <- ggplot(d_s, aes(x = height, y = weight, colour = gender)) +
geom_point(alpha = .5) +
geom_smooth(aes(x = height, y = weight), method = "lm") +
theme_bw() +
theme(legend.position = "none") +
geom_hline(aes(yintercept = mw, colour = gender), sum_dat) +
geom_vline(aes(xintercept = mh, colour = gender), sum_dat) +
scale_color_gdocs()
grid.arrange(gg_den1, blankPlot, gg_main, gg_den2,
ncol=2, nrow=2, widths=c(4, 1.4), heights=c(1.4, 4))
gg_main <- ggplot(d_s, aes(x = height, y = weight, colour = gender)) +
geom_point(alpha = .5) +
geom_smooth(aes(x = height, y = weight, group = 1), method = "lm") +
theme_bw() +
theme(legend.position = "none") +
geom_hline(aes(yintercept = mw, colour = gender), sum_dat) +
geom_vline(aes(xintercept = mh, colour = gender), sum_dat) +
scale_color_gdocs()
gg_main
gg_main <- ggplot(d_s, aes(x = height, y = weight, colour = gender)) +
geom_point(alpha = .5) +
geom_smooth(aes(x = height, y = weight, group = 1), method = "lm", color = "black") +
theme_bw() +
theme(legend.position = "none") +
geom_hline(aes(yintercept = mw, colour = gender), sum_dat) +
geom_vline(aes(xintercept = mh, colour = gender), sum_dat) +
scale_color_gdocs()
grid.arrange(gg_den1, blankPlot, gg_main, gg_den2,
ncol=2, nrow=2, widths=c(4, 1.4), heights=c(1.4, 4))
blankPlot <- ggplot() + geom_blank(aes(1,1)) + geom_map()
blankPlot <- ggplot() + geom_blank(aes(1,1)) + geom_map()
blankPlot <- ggplot() + geom_blank(aes(1,1)) + geom_blank()
all <- grid.arrange(gg_den1, blankPlot, gg_main, gg_den2,
ncol=2, nrow=2, widths=c(4, 1.4), heights=c(1.4, 4))
all
print(all)
blankPlot <- ggplot() + geom_blank(aes(1,1)) + theme_map()
all <- grid.arrange(gg_den1, blankPlot, gg_main, gg_den2,
ncol=2, nrow=2, widths=c(4, 1.4), heights=c(1.4, 4))
all
grid.arrange(gg_den1, blankPlot, gg_main, gg_den2,
ncol=2, nrow=2, widths=c(4, 1.4), heights=c(1.4, 4))
theme_set(theme_bw)
gg_big_scattter <- function(data, x, y, grouping = NULL){
library(ggplot2)
library(ggthemes)
library(dplyr)
theme_set(theme_bw)
sum_dat <- data %>%
mutate(gender = factor(grouping)) %>%
group_by(grouping) %>%
summarise(mx = mean(x), my = mean(y))
gg_main <- ggplot(d_s, aes(x, y, colour = gender)) +
geom_point(alpha = .5) +
geom_smooth(aes(x = x, y = y, group = 1), method = "lm", color = "black") +
theme(legend.position = "none") +
geom_hline(aes(yintercept = mw, colour = gender), sum_dat) +
geom_vline(aes(xintercept = mh, colour = gender), sum_dat) +
scale_color_gdocs()
gg_den1 <- ggplot(d_s, aes(x, fill = factor(gender))) +
geom_density(position = position_dodge(), alpha = .5) +
theme(legend.position = "none") +
scale_color_gdocs() +
scale_fill_gdocs() +
xlab("") +
geom_vline(aes(xintercept = mx, colour = gender), sum_dat)
gg_den2 <- ggplot(d_s, aes(y, fill = factor(gender))) +
geom_density(position = position_dodge(), alpha = .5) +
theme(legend.position = "none") +
scale_color_gdocs() +
scale_fill_gdocs() +
geom_vline(aes(xintercept = my, colour = gender), sum_dat) +
coord_flip() +
xlab("")
blankPlot <- ggplot() + geom_blank(aes(1,1)) + theme_map()
library(gridExtra)
grid.arrange(gg_den1, blankPlot, gg_main, gg_den2,
ncol=2, nrow=2, widths=c(4, 1.4), heights=c(1.4, 4))
}
gg_big_scattter(d_s, x = height, y = weight, grouping = gender)
gg_big_scattter <- function(data, x, y, grouping = NULL){
library(ggplot2)
library(ggthemes)
library(dplyr)
theme_set(theme_bw)
sum_dat <- data %>%
mutate(gender = factor(grouping)) %>%
group_by(grouping) %>%
summarise(mx = mean(x), my = mean(y))
gg_main <- ggplot(d_s, aes(x, y, colour = grouping)) +
geom_point(alpha = .5) +
geom_smooth(aes(x = x, y = y, group = 1), method = "lm", color = "black") +
theme(legend.position = "none") +
geom_hline(aes(yintercept = mw, colour = grouping), sum_dat) +
geom_vline(aes(xintercept = mh, colour = grouping), sum_dat) +
scale_color_gdocs()
gg_den1 <- ggplot(d_s, aes(x, fill = factor(grouping))) +
geom_density(position = position_dodge(), alpha = .5) +
theme(legend.position = "none") +
scale_color_gdocs() +
scale_fill_gdocs() +
xlab("") +
geom_vline(aes(xintercept = mx, colour = grouping), sum_dat)
gg_den2 <- ggplot(d_s, aes(y, fill = factor(grouping))) +
geom_density(position = position_dodge(), alpha = .5) +
theme(legend.position = "none") +
scale_color_gdocs() +
scale_fill_gdocs() +
geom_vline(aes(xintercept = my, colour = grouping), sum_dat) +
coord_flip() +
xlab("")
blankPlot <- ggplot() + geom_blank(aes(1,1)) + theme_map()
library(gridExtra)
grid.arrange(gg_den1, blankPlot, gg_main, gg_den2,
ncol=2, nrow=2, widths=c(4, 1.4), heights=c(1.4, 4))
}
gg_big_scattter(d_s, x = height, y = weight, grouping = gender)
gg_big_scattter(d_s, x = "height", y = "weight", grouping = "gender")
gg_big_scattter <- function(data, x, y, grouping){
library(ggplot2)
library(ggthemes)
library(dplyr)
theme_set(theme_bw)
sum_dat <- data %>%
mutate(gender = factor(grouping)) %>%
group_by(grouping) %>%
summarise(mx = mean(x), my = mean(y))
gg_main <- ggplot(d_s, aes(x, y, colour = grouping)) +
geom_point(alpha = .5) +
geom_smooth(aes(x = x, y = y, group = 1), method = "lm", color = "black") +
theme(legend.position = "none") +
geom_hline(aes(yintercept = mw, colour = grouping), sum_dat) +
geom_vline(aes(xintercept = mh, colour = grouping), sum_dat) +
scale_color_gdocs()
gg_den1 <- ggplot(d_s, aes(x, fill = factor(grouping))) +
geom_density(position = position_dodge(), alpha = .5) +
theme(legend.position = "none") +
scale_color_gdocs() +
scale_fill_gdocs() +
xlab("") +
geom_vline(aes(xintercept = mx, colour = grouping), sum_dat)
gg_den2 <- ggplot(d_s, aes(y, fill = factor(grouping))) +
geom_density(position = position_dodge(), alpha = .5) +
theme(legend.position = "none") +
scale_color_gdocs() +
scale_fill_gdocs() +
geom_vline(aes(xintercept = my, colour = grouping), sum_dat) +
coord_flip() +
xlab("")
blankPlot <- ggplot() + geom_blank(aes(1,1)) + theme_map()
library(gridExtra)
grid.arrange(gg_den1, blankPlot, gg_main, gg_den2,
ncol=2, nrow=2, widths=c(4, 1.4), heights=c(1.4, 4))
}
gg_big_scattter(d_s, x = "height", y = "weight", grouping = "gender")
sum_dat <- d_s %>%
mutate(gender = factor(gender)) %>%
group_by(gender) %>%
summarise(mh = mean(height), mw = mean(weight))
gg_main <- ggplot(d_s, aes(x = height, y = weight, colour = gender)) +
geom_point(alpha = .5) +
geom_smooth(aes(x = height, y = weight, group = 1), method = "lm", color = "black") +
theme_bw() +
theme(legend.position = "none") +
geom_hline(aes(yintercept = mw, colour = gender), sum_dat) +
geom_vline(aes(xintercept = mh, colour = gender), sum_dat) +
scale_color_gdocs()
gg_main <- ggplot(d_s, aes(x = height, y = weight, colour = gender)) +
geom_point(alpha = .5) +
geom_smooth(aes(x = height, y = weight, group = 1), method = "lm", color = "black") +
theme_bw() +
theme(legend.position = "none") +
geom_hline(aes(yintercept = mw, colour = gender), sum_dat) +
geom_vline(aes(xintercept = mh, colour = gender), sum_dat) +
scale_color_gdocs()
gg_main <- ggplot(d_s, aes(x = height, y = weight, colour = gender)) +
geom_point(alpha = .5) +
geom_smooth(aes(x = height, y = weight, group = 1), method = "lm", color = "black") +
#theme_bw() +
theme(legend.position = "none") +
geom_hline(aes(yintercept = mw, colour = gender), sum_dat) +
geom_vline(aes(xintercept = mh, colour = gender), sum_dat) +
scale_color_gdocs()
gg_main <- ggplot(d_s, aes(x = height, y = weight, colour = gender)) +
geom_point(alpha = .5) +
geom_smooth(aes(x = height, y = weight, group = 1), method = "lm", color = "black") +
theme_bw() +
theme(legend.position = "none") +
geom_hline(aes(yintercept = mw, colour = gender), sum_dat) +
geom_vline(aes(xintercept = mh, colour = gender), sum_dat) +
scale_color_gdocs()
d_s <- sim_data(1000)
sum_dat <- d_s %>%
mutate(gender = factor(gender)) %>%
group_by(gender) %>%
summarise(mh = mean(height), mw = mean(weight))
sum_dat
library(ggplot2)
library(ggthemes)
library(dplyr)
sum_dat <- d_s %>%
mutate(gender = factor(gender)) %>%
group_by(gender) %>%
summarise(mh = mean(height), mw = mean(weight))
gg_main <- ggplot(d_s, aes(x = height, y = weight, colour = gender)) +
geom_point(alpha = .5) +
geom_smooth(aes(x = height, y = weight, group = 1), method = "lm", color = "black") +
theme_bw() +
theme(legend.position = "none") +
geom_hline(aes(yintercept = mw, colour = gender), sum_dat) +
geom_vline(aes(xintercept = mh, colour = gender), sum_dat) +
scale_color_gdocs()
gg_main <- ggplot(d_s, aes(x = height, y = weight, colour = gender)) +
geom_point(alpha = .5)
gg_main <- ggplot(d_s, aes(x = height, y = weight, colour = gender)) +
geom_point(alpha = .5) +
geom_smooth(aes(x = height, y = weight, group = 1), method = "lm", color = "black") +
theme_bw()
gg_main <- ggplot(d_s, aes(x = height, y = weight, colour = gender)) +
geom_point(alpha = .5) +
geom_smooth(aes(x = height, y = weight, group = 1), method = "lm", color = "black") +
theme_bw() +
theme(legend.position = "none")
gg_main <- ggplot(d_s, aes(x = height, y = weight, colour = gender)) +
geom_point(alpha = .5) +
geom_smooth(aes(x = height, y = weight, group = 1), method = "lm", color = "black") +
theme_bw()
gg_main <- ggplot(d_s, aes(x = height, y = weight, colour = gender)) +
geom_point(alpha = .5) +
geom_smooth(aes(x = height, y = weight, group = 1), method = "lm", color = "black") +
theme_bw() +
theme(legend.position = "none")
rm(list = ls())
sim_data <- function(n){
set.seed(1234)
#n <- 1000
d <- data.frame(id = 1:n)
name <- rbinom(n, 7, .5)
d$name <- as.character(factor(name, labels = c("Jack","Mia","Anne","Tobias","Laura","Jason","Felix","Kiki")))
d$gender <- as.factor(factor(name, labels = c("Male","Female","Female","Male","Female","Male","Male","Female")))
d$height <- rnorm(n, mean = ifelse(d$gender %in% "Male", 180, 171), sd = 10)
d$weight <- rnorm(n, mean = ifelse(d$gender %in% "Male", 77.5, 68.7), sd = 10)
return(d)
}
d_s <- sim_data(1000)
str(d_s)
with(d_s, plot(weight ~ height))
library(ggplot2)
library(ggthemes)
library(dplyr)
sum_dat <- d_s %>%
mutate(gender = factor(gender)) %>%
group_by(gender) %>%
summarise(mh = mean(height), mw = mean(weight))
gg_main <- ggplot(d_s, aes(x = height, y = weight, colour = gender)) +
geom_point(alpha = .5) +
geom_smooth(aes(x = height, y = weight, group = 1), method = "lm", color = "black") +
theme_bw() +
theme(legend.position = "none") +
geom_hline(aes(yintercept = mw, colour = gender), sum_dat) +
geom_vline(aes(xintercept = mh, colour = gender), sum_dat) +
scale_color_gdocs()
gg_main <- ggplot(d_s, aes(x = height, y = weight, colour = gender)) +
geom_point(alpha = .5) +
geom_smooth(aes(x = height, y = weight, group = 1), method = "lm", color = "black") +
theme_bw() +
theme(legend.position = "none")
shiny::runApp('~/Dropbox/methods/git/r_workshops/apps/predictive_mean')
runApp('~/Dropbox/methods/git/r_workshops/apps/predictive_mean')
# Hardcode the true relationship
n = 100
x <- rnorm(n, 0, 2)
y <- 2 + x + rnorm(n, 0, 1)
model.summary <- summary(lm(y ~ x))
a <- 2
b <- 1
# Calculate the current residuals
yhat <- a + x * b
resid <- y - yhat
regression <- list(
x = x,
y = y,
yhat = yhat,
a = a,
b = b,
resid = resid)
d <- regression
mask <- x > -4.5 & x < 4.5 & y > -3 & y < 8
x <- d$x[mask]
y <- d$y[mask]
predicted <- d$yhat[mask]
d <- data.frame(x = x, y = y, predicted)
### interactive X value
m <- input$value
m <- 0
gg_scatter <- ggplot(d, aes(x, y)) +
theme_minimal() +
geom_abline(intercept = a, slope = b) +
#geom_segment(aes(xend = x, yend = predicted), color = r$resid.color) +
geom_vline(xintercept = m) +
geom_hline(yintercept = (a + b*m)) +
#geom_segment(aes(xend=0, yend=y), color="blue") +#geom_point() +
xlim(-4.5, 4.5) +
geom_rug(sides = "tr") +
geom_point() +
### x panel
geom_rect(aes(xmin = (m -.5), xmax = (m + .5),
ymin=min(y), ymax=max(y)
),
fill = 'blue', alpha=.005) +
### y panel
geom_rect(aes(xmin = -4.5, xmax = 4.5,
ymin = (a+b*m - .7), ymax= (a+b*m + .7)
), fill='red', alpha=.005)
gg_scatter
d$f1 <- ifelse(d$x > (m - .5) & d$x < (m + .5), "1", "0")
gg_x <- ggplot(d, aes(x, fill = f1)) +
geom_histogram(alpha = .5) +
geom_vline(xintercept = m) +
theme_minimal() +
xlim(-4.5,4.5) +
scale_fill_manual(values = c("grey20", "blue")) +
theme(legend.position = "none", text = element_text(size = 11))
d$f2 <- ifelse(d$y > (a+b*m - .7) & d$y < (a+b*m + .7), "1", "0")
gg_y <- ggplot(d, aes(y, fill = f2)) +
geom_histogram(alpha = .5) +
theme_minimal() +
geom_vline(xintercept = a+b*m) +
theme(legend.position = "none", text = element_text(size = 9)) +
scale_fill_manual(values = c("grey20", "red")) +
coord_flip()
gg_empty <- ggplot() + theme_map()
lay <- rbind(c(2,2,2,4),
c(1,1,1,3),
c(1,1,1,3),
c(1,1,1,3))
grid.arrange(gg_scatter, gg_x, gg_y, gg_empty, layout_matrix = lay)
runApp('~/Dropbox/methods/git/r_workshops/apps/predictive_mean')
runApp('~/Dropbox/methods/git/r_workshops/apps/predictive_mean')
shiny::runApp('~/Dropbox/methods/git/r_workshops/apps/predictive_mean')
